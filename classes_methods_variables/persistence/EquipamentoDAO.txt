class EquipamentoDAO

	// Constraints to the error messages that could be returned. 
	private static final String EQUIPAMENTO_JA_EXISTENTE = "Equipamento ja cadastrado.";
	private static final String EQUIPAMENTO_NAO_EXISTENTE = "Equipamento nao cadastrado.";
	private static final String EQUIPAMENTO_NULO = "Equipamento esta nulo.";
	private static final String EQUIPAMENTO_EM_USO = "Equipamento esta sendo utilizado em uma reserva.";
	private static final String CODIGO_JA_EXISTENTE = "Equipamento com o mesmo codigo ja cadastrado.";

	
	private static EquipamentoDAO instance // Object that will represent the current instance to the singleton implementation. 

	// Blank constructor.
	private EquipamentoDAO

	// Singleton implementation.
	public static EquipamentoDAO getInstance 


	// Include new Equipamento in the database.
	public void include 
		Equipamento equipamento // The Euipamento object that will be included in the database.

	// Update Equipamento info in the database.
	public void change 
		Equipamento old_equipamento // The Equipamento object that represents the entry to be updated.
		Equipamento new_equipamento // The Equipamento object that represents the new entry, to replace the old one.

	// Remove Equipamento form the database.
	public void exclude 
		Equipamento equipamento // The Equipamento object that will be removed from the database. 

	// Retrive all Equipamento from the database.
	public Vector <Equipamento> searchAll

	// Search an Equipamento by id code.
	public Vector <Equipamento> searchByCode
		String valor // The code that should be searched in the database. 

	// Search an Equipamento by description.
	public Vector <Equipamento> searchByDescription 
		String valor // The description that should be searched in the database. 


	// Retrive Equipamento from the database.
	private Vector <Equipamento> search
		String query // The query that will be used in the seach.

	// Check if there is a database entry by query.
	private boolean inDBGeneric
		String query // Query that will be used to check if there is an entry in the database. 

	// Check if there is a database entry by Equipamento.
	private boolean inDB
		Equipamento e // The object that represents the Equipamento, so we can check if it is on the database.

	// Check if there is a database entry by code id.
	private boolean inDBCodigo
		String codigo // The code that identifies the Equipamento, so we can check if it is on the database.

	// Check if there is a database entry.
	private boolean inOtherDB
		Equipamento e // The object that represents the Equipamento, so we can check if it is on the database.

	// Fetch Equipamento usign a result.
	private Equipamento fetchEquipamento 
		ResultSet rs // Results from some database search, and will be used to create a Equipamento object. 

	// Update a query.
	private void updateQuery 
		String msg // The statemant that should be sended to the database. 

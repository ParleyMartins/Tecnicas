public class ResSalaAlunoDAO 

	// Messages and alerts.
	private final String NULA = "Termo nulo.";
	private final String ALUNO_INDISPONIVEL = "O aluno possui uma reserva no mesmo dia e horario.";
	private final String SALA_INDISPONIVEL = "A Sala esta reservada no mesmo dia e horario.";
	private final String ALUNO_INEXISTENTE = "Aluno inexistente.";
	private final String SALA_INEXISTENTE = "Sala inexistente";
	private final String RESERVA_INEXISTENTE = "Reserva inexistente";
	private final String RESERVA_EXISTENTE = "A reserva ja existe.";
	private final String CADEIRAS_INDISPONIVEIS = "O numero de cadeiras reservadas esta indisponivel para esta sala.";
	private final String DATA_JA_PASSOU = "A data escolhida ja passou.";
	private final String HORA_JA_PASSOU = "A hora escolhida ja passou.";

	private static ResSalaAlunoDAO instance // Object that will represent the current instance to the singleton implementation.

	// Empty constructor.
	private ResSalaAlunoDAO 

	public static ResSalaAlunoDAO getInstance // Singleton implementation.

	// Select id by Aluno query.
	private String select_id_aluno 
		Aluno a // The Aluno object that will be selected in the database. 

	// Select id by Sala query.
	private String select_id_sala 
		Sala sala // The Sala object that will be selected in the database.

	// Reuse query for WHERE clause.
	private String where_reserva_sala_aluno 
		ReservaSalaAluno r // Represents a room reservation.

	// Reuse query for VALUES clause.
	private String values_reserva_sala_aluno 
		ReservaSalaAluno r // Represents a room reservation.

	// Reuse query for ATRIBUTES clause.
	private String atibutes_value_reserva_sala_aluno 
		ReservaSalaAluno r // Represents a room reservation.

	// Reuse query for INSERT clause.
	private String insert_into 
		ReservaSalaAluno r // The ReservaSalaAluno object that will be inserted in the database.

	// Reuse query for UPDATE clause.
	private String update 
		ReservaSalaAluno r // The ReservaSalaAluno object that represents the entry to be updated.
		ReservaSalaAluno r2 // The ReservaSalaAluno object that represents the new entry, to replace the old one.

	// Reuse query for DELETE clause.
	private String delete_from 
		ReservaSalaAluno r // The ReservaSalaAluno object that will be removed from the database. 

	// Include new Reserva in the database.
	public void incluir 
		ReservaSalaAluno r // The ReservaSalaAluno ReservaEquipamento object that will be isert in the database.

	// Update Reserva info from the database.
	public void alterar 
		ReservaSalaAluno r // The ReservaSalaAluno object that represents the entry to be updated.
		ReservaSalaAluno r_new // The ReservaSalaAluno object that represents the new entry, to replace the old one.

	// Remove Reserva info from the database.
	public void excluir 
		ReservaSalaAluno r // The ReservaSalaAluno object that will be removed from the database.

	// Select all Reservas from the database.
	public Vector <ReservaSalaAluno> buscarTodos 

	// Select Reservas from the database by day.
	public Vector <ReservaSalaAluno> buscarPorDia 
		String data // Represents a date.
			

	// Select Reservas from the database by hour.
	public Vector <ReservaSalaAluno> buscarPorHora 
		String hora // Represents a time.

	// Check for the amount of available chairs in one room.
	public int cadeirasDisponiveis 
		Sala sala  // This represents room is being searched.
		String data // Represents a date.
		String hora // Represents a time.
		Vector <ReservaSalaAluno> vet // Vector that takes reservations made by the student.
		Iterator <ReservaSalaAluno> it // Traverses the vector.
		int total // Total dispiniveis chairs

	// Check if there is available chairs in one room.
	private boolean haCadeiras 
		String cadeiras_reservadas // Represents the reserved seats.
		Sala sala // This represents room is being searched.
		String data // Represents a date.
		String hora // Represents a time.
		
	// Fetch reserva using a result.
	protected Object fetch 
		ResultSet rs // Represents the result of an insertion in stock.
		Aluno a // Represents a new student created from rs.
		Sala s // Represents a new room created from rs.
		ReservaSalaAluno r // Represents a new reservation created from rs student and room.

	// Check if there is a Aluno in the database.
	private boolean alunoinDB 
		Aluno aluno // This represents student is to be sought.

	// Check if there is a Sala in the database.
	private boolean salainDB 
		Sala sala // This represents room is being searched.

	// Check if there is a Aluno entry in Reserva.
	private boolean alunoinReservaDB 
		Aluno aluno // This represents student is to be sought.
		String data // Represents a date.
		String hora // Represents a time.

	// Check if there is a Sala entry in Reserva.
	private boolean salainReservaProfessorDB 
		Sala sala // This represents room is being searched.
		String data // Represents a date.
		String hora // Represents a time.
			

	// Check if there is a Reserva in the database.
	private boolean reservainDB 
		ReservaSalaAluno r // ReservaSalaAluno object that will be checked from the database.
		
	// Gets the current date.
	private String dataAtual 
		Date date // Represents the current date.
		SimpleDateFormat formatador // Formats the date.

	// Gets the current time.
	private String horaAtual 
		Date date // Represents a date.

	// Check if the date is passed.
	private boolean dataPassou 
		String d // Represent a date.
		String agora[] // Represents the current date. 
		String data[] // Date it came as no parameter bar.
		int dif // Difference between dates.
		
	// Check if Date is equals
	public boolean dataIgual 
		String d // Represent a date.
		String agora[] // Represents the current date.
		String data[] // Date it came as no parameter bar.

	// Check if the time is passed.
	private boolean horaPassou 
		String hora // Represents a time.

	// Standardize the date.
	private String padronizarData 
		String data // Represents a date.
		String agora[] // Represents the current date.
		String partes[] // Each part of the date.
		String dataNoPadrao // Result.

	// Standardize the time.
	private String padronizarHora 
		String hora // Represents a time.
